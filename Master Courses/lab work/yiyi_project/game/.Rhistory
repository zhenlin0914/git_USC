if (dataset[q] == "team"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "teammate"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "teammates"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "champs"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "champion"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "champions"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "ban"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "banning"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "bans"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "losing"){
dataset[q] = "lose/losing"
}
if (dataset[q] == "lose"){
dataset[q] = "lose/losing"
}
if (dataset[q] == "punishment"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "punish"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "punishments"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "trolls"){
dataset[q] = "trolls/troll/trolling"
}
if (dataset[q] == "troll"){
dataset[q] = "trolls/troll/trolling"
}
if (dataset[q] == "trolling"){
dataset[q] = "trolls/troll/trolling"
}
}
#filter out the unmeaningful words
dataset   <- lapply(dataset, function(x) x[!x %in% c(
"", " ",                                          #blank
"be","is","are", "am","being",                  #be
"in","out","to","on","by", "at", "from",         #space
"as","doing", "just","for","if","it", "of",     #other
"a","the","that", "early","game","getting","lane",
"or","and","not","one","when","want","like","play",
"do","because","another","get","games","don't",
"something","go","having","way","what","back","all","but",
"so","will","usually","also","can","most","anymore",
"it's","its","some","this","now","have","itself","an",
"dont","know","really","where","was","who","would","making",
"else","remove","then","than","make","much","even","feel","behavior",
"up","there","fix"
)])
dataset   <- unlist(dataset)
dataset
}
toxicword                   <- clean(toxicword)
howtohelpyourself           <- clean(howtohelpyourself)
howtoimprove                <- clean(howtoimprove)
like                        <- clean(like)
#establishing frequencies
counts_toxicword          <- data.frame((table(toxicword)))
counts_howtohelpyourself  <- data.frame((table(howtohelpyourself)))
counts_howtoimprove       <- data.frame((table(howtoimprove)))
counts_like               <- data.frame((table(like)))
counts_toxicword         <- subset(counts_toxicword, counts_toxicword$Freq > min)
counts_howtohelpyourself <- subset(counts_howtohelpyourself, counts_howtohelpyourself$Freq > min)
counts_howtoimprove      <- subset(counts_howtoimprove, counts_howtoimprove$Freq > min)
counts_like              <- subset(counts_like, counts_like$Freq > min)
pdf("Toxic Behavior Self Report Word Frequency Analysis", onefile = TRUE, title = "graphic")
counts_toxicword_graph <-ggplot(counts_toxicword, aes( x = reorder(toxicword, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("Frequency of Toxic Words") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
counts_howtohelpyourself_graph <-ggplot(counts_howtohelpyourself, aes(x = reorder(howtohelpyourself, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("What helps you in the situation?") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
counts_howtoimprove_graph <-ggplot(counts_howtoimprove, aes(x = reorder(howtoimprove, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("How to improve?") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
counts_like_graph <-ggplot(counts_like, aes(x = reorder(like, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("Why you like the game?") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
grid.arrange(counts_toxicword_graph)
grid.arrange(counts_howtohelpyourself_graph)
grid.arrange(counts_howtoimprove_graph)
grid.arrange(counts_like_graph)
dev.off()
library(plyr)
library(ggplot2)
library(gridExtra)
#default settings
min = 15
toxicword              = read.csv("toxicword.csv", header = TRUE)
howtohelpyourself      = read.csv("howtohelpyourself.csv", header = TRUE)
howtoimprove           = read.csv("howtoimprove.csv", header = TRUE)
like                   = read.csv("like.csv", header = TRUE)
colnames(toxicword)[colnames(toxicword) == 'What.do.you.think.are.the.most.common.situations.in.game.that.spur.the.players.to.become.toxic.'] <- 'toxicword'
colnames(howtohelpyourself)[colnames(howtohelpyourself) == 'Q16_6_TEXT...Other'] <- 'howtohelpyourself'
colnames(howtoimprove)[colnames(howtoimprove) == 'What.are.your.thoughts.on.improving.the.overall.gaming.environment.'] <- 'howtoimprove'
colnames(like)[colnames(like) == 'What.are.things.you.like.about.LoL..e.g...honor.system..fancy.skins..etc.....'] <- 'like'
toxicword   <- gsub("[^[:alnum:]///' ]", " ", toxicword$toxicword)
howtohelpyourself   <- gsub("[^[:alnum:]///' ]", " ", howtohelpyourself$howtohelpyourself)
howtoimprove   <- gsub("[^[:alnum:]///' ]", " ", howtoimprove$howtoimprove)
like   <- gsub("[^[:alnum:]///' ]", " ", like$like)
#remove all speical characters
#combine words
clean <- function(dataset){
dataset   <- gsub("/", " ", dataset)
dataset   <- strsplit(dataset, " ")
dataset   <- unlist(dataset)
dataset   <- tolower(dataset)
for (q in 1:length(dataset)){
if (dataset[q] == "match"){
if (dataset[q+1] == "making"){
dataset[q]   = "matchmaking"
dataset[q+1] = ""
}
}
if (dataset[q] == "other"){
if (dataset[q+1] == "people"){
print (q)
dataset[q]   = "other people"
dataset[q+1] = ""
}
if (dataset[q+1] == "player"){
print (q)
dataset[q]   = "other player"
dataset[q+1] = ""
}
if (dataset[q+1] == "players"){
print (q)
dataset[q]   = "other players"
dataset[q+1] = ""
}
if (dataset[q+1] == "teammates"){
print ("teammates")
dataset[q]   = "other players"
dataset[q+1] = ""
}
}
}
for (q in 1:length(dataset)){
if (dataset[q] == "mistake"){
dataset[q] = "mistake/mistakes"
}
if (dataset[q] == "mistakes"){
dataset[q] = "mistake/mistakes"
}
if (dataset[q] == "they"){
dataset[q] = "they/them/their"
}
if (dataset[q] == "them"){
dataset[q] = "they/them/their"
}
if (dataset[q] == "their"){
dataset[q] = "they/them/their"
}
if (dataset[q] == "you"){
dataset[q] = "you/your/yours"
}
if (dataset[q] == "yours"){
dataset[q] = "you/your/yours"
}
if (dataset[q] == "your"){
dataset[q] = "you/your/yours"
}
if (dataset[q] == "player"){
dataset[q] = "player/players"
}
if (dataset[q] == "players"){
dataset[q] = "player/players"
}
if (dataset[q] == "poor"){
dataset[q] = "poor/poorly"
}
if (dataset[q] == "poorly"){
dataset[q] = "poor/poorly"
}
if (dataset[q] == "team"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "teammate"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "teammates"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "champs"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "champion"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "champions"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "ban"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "banning"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "bans"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "losing"){
dataset[q] = "lose/losing"
}
if (dataset[q] == "lose"){
dataset[q] = "lose/losing"
}
if (dataset[q] == "punishment"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "punish"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "punishments"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "trolls"){
dataset[q] = "trolls/troll/trolling"
}
if (dataset[q] == "troll"){
dataset[q] = "trolls/troll/trolling"
}
if (dataset[q] == "trolling"){
dataset[q] = "trolls/troll/trolling"
}
}
#filter out the unmeaningful words
dataset   <- lapply(dataset, function(x) x[!x %in% c(
"", " ",                                          #blank
"be","is","are", "am","being",                  #be
"in","out","to","on","by", "at", "from",         #space
"as","doing", "just","for","if","it", "of",     #other
"a","the","that", "early","game","getting","lane",
"or","and","not","one","when","want","like","play",
"do","because","another","get","games","don't",
"something","go","having","way","what","back","all","but",
"so","will","usually","also","can","most","anymore",
"it's","its","some","this","now","have","itself","an",
"dont","know","really","where","was","who","would","making",
"else","remove","then","than","make","much","even","feel","behavior",
"up","there","fix"
)])
dataset   <- unlist(dataset)
dataset
}
toxicword                   <- clean(toxicword)
howtohelpyourself           <- clean(howtohelpyourself)
howtoimprove                <- clean(howtoimprove)
like                        <- clean(like)
#establishing frequencies
counts_toxicword          <- data.frame((table(toxicword)))
counts_howtohelpyourself  <- data.frame((table(howtohelpyourself)))
counts_howtoimprove       <- data.frame((table(howtoimprove)))
counts_like               <- data.frame((table(like)))
counts_toxicword         <- subset(counts_toxicword, counts_toxicword$Freq > min)
counts_howtohelpyourself <- subset(counts_howtohelpyourself, counts_howtohelpyourself$Freq > min)
counts_howtoimprove      <- subset(counts_howtoimprove, counts_howtoimprove$Freq > min)
counts_like              <- subset(counts_like, counts_like$Freq > min)
pdf("Toxic Behavior Self Report Word Frequency Analysis", onefile = TRUE, title = "graphic")
counts_toxicword_graph <-ggplot(counts_toxicword, aes( x = reorder(toxicword, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("Frequency of Toxic Words") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
counts_howtohelpyourself_graph <-ggplot(counts_howtohelpyourself, aes(x = reorder(howtohelpyourself, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("What helps you in the situation?") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
counts_howtoimprove_graph <-ggplot(counts_howtoimprove, aes(x = reorder(howtoimprove, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("How to improve?") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
counts_like_graph <-ggplot(counts_like, aes(x = reorder(like, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("Why you like the game?") +
geom_text(aes(label = Freq), color = "black") +
coord_flip()
grid.arrange(counts_toxicword_graph)
grid.arrange(counts_howtohelpyourself_graph)
grid.arrange(counts_howtoimprove_graph)
grid.arrange(counts_like_graph)
dev.off()
library(plyr)
library(ggplot2)
library(gridExtra)
#default settings
min = 15
toxicword              = read.csv("toxicword.csv", header = TRUE)
howtohelpyourself      = read.csv("howtohelpyourself.csv", header = TRUE)
howtoimprove           = read.csv("howtoimprove.csv", header = TRUE)
like                   = read.csv("like.csv", header = TRUE)
colnames(toxicword)[colnames(toxicword) == 'What.do.you.think.are.the.most.common.situations.in.game.that.spur.the.players.to.become.toxic.'] <- 'toxicword'
colnames(howtohelpyourself)[colnames(howtohelpyourself) == 'Q16_6_TEXT...Other'] <- 'howtohelpyourself'
colnames(howtoimprove)[colnames(howtoimprove) == 'What.are.your.thoughts.on.improving.the.overall.gaming.environment.'] <- 'howtoimprove'
colnames(like)[colnames(like) == 'What.are.things.you.like.about.LoL..e.g...honor.system..fancy.skins..etc.....'] <- 'like'
toxicword   <- gsub("[^[:alnum:]///' ]", " ", toxicword$toxicword)
howtohelpyourself   <- gsub("[^[:alnum:]///' ]", " ", howtohelpyourself$howtohelpyourself)
howtoimprove   <- gsub("[^[:alnum:]///' ]", " ", howtoimprove$howtoimprove)
like   <- gsub("[^[:alnum:]///' ]", " ", like$like)
#remove all speical characters
#combine words
clean <- function(dataset){
dataset   <- gsub("/", " ", dataset)
dataset   <- strsplit(dataset, " ")
dataset   <- unlist(dataset)
dataset   <- tolower(dataset)
for (q in 1:length(dataset)){
if (dataset[q] == "match"){
if (dataset[q+1] == "making"){
dataset[q]   = "matchmaking"
dataset[q+1] = ""
}
}
if (dataset[q] == "other"){
if (dataset[q+1] == "people"){
print (q)
dataset[q]   = "other people"
dataset[q+1] = ""
}
if (dataset[q+1] == "player"){
print (q)
dataset[q]   = "other player"
dataset[q+1] = ""
}
if (dataset[q+1] == "players"){
print (q)
dataset[q]   = "other players"
dataset[q+1] = ""
}
if (dataset[q+1] == "teammates"){
print ("teammates")
dataset[q]   = "other players"
dataset[q+1] = ""
}
}
}
for (q in 1:length(dataset)){
if (dataset[q] == "mistake"){
dataset[q] = "mistake/mistakes"
}
if (dataset[q] == "mistakes"){
dataset[q] = "mistake/mistakes"
}
if (dataset[q] == "they"){
dataset[q] = "they/them/their"
}
if (dataset[q] == "them"){
dataset[q] = "they/them/their"
}
if (dataset[q] == "their"){
dataset[q] = "they/them/their"
}
if (dataset[q] == "you"){
dataset[q] = "you/your/yours"
}
if (dataset[q] == "yours"){
dataset[q] = "you/your/yours"
}
if (dataset[q] == "your"){
dataset[q] = "you/your/yours"
}
if (dataset[q] == "player"){
dataset[q] = "player/players"
}
if (dataset[q] == "players"){
dataset[q] = "player/players"
}
if (dataset[q] == "poor"){
dataset[q] = "poor/poorly"
}
if (dataset[q] == "poorly"){
dataset[q] = "poor/poorly"
}
if (dataset[q] == "team"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "teammate"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "teammates"){
dataset[q] = "team/teammate/teammates"
}
if (dataset[q] == "champs"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "champion"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "champions"){
dataset[q] = "champs/champion/champions"
}
if (dataset[q] == "ban"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "banning"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "bans"){
dataset[q] = "ban/banning/bans"
}
if (dataset[q] == "losing"){
dataset[q] = "lose/losing"
}
if (dataset[q] == "lose"){
dataset[q] = "lose/losing"
}
if (dataset[q] == "punishment"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "punish"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "punishments"){
dataset[q] = "punish/punishment/punishments"
}
if (dataset[q] == "trolls"){
dataset[q] = "trolls/troll/trolling"
}
if (dataset[q] == "troll"){
dataset[q] = "trolls/troll/trolling"
}
if (dataset[q] == "trolling"){
dataset[q] = "trolls/troll/trolling"
}
}
#filter out the unmeaningful words
dataset   <- lapply(dataset, function(x) x[!x %in% c(
"", " ",                                          #blank
"be","is","are", "am","being",                  #be
"in","out","to","on","by", "at", "from",         #space
"as","doing", "just","for","if","it", "of",     #other
"a","the","that", "early","game","getting","lane",
"or","and","not","one","when","want","like","play",
"do","because","another","get","games","don't",
"something","go","having","way","what","back","all","but",
"so","will","usually","also","can","most","anymore",
"it's","its","some","this","now","have","itself","an",
"dont","know","really","where","was","who","would","making",
"else","remove","then","than","make","much","even","feel","behavior",
"up","there","fix"
)])
dataset   <- unlist(dataset)
dataset
}
toxicword                   <- clean(toxicword)
howtohelpyourself           <- clean(howtohelpyourself)
howtoimprove                <- clean(howtoimprove)
like                        <- clean(like)
#establishing frequencies
counts_toxicword          <- data.frame((table(toxicword)))
counts_howtohelpyourself  <- data.frame((table(howtohelpyourself)))
counts_howtoimprove       <- data.frame((table(howtoimprove)))
counts_like               <- data.frame((table(like)))
counts_toxicword         <- subset(counts_toxicword, counts_toxicword$Freq > min)
counts_howtohelpyourself <- subset(counts_howtohelpyourself, counts_howtohelpyourself$Freq > min)
counts_howtoimprove      <- subset(counts_howtoimprove, counts_howtoimprove$Freq > min)
counts_like              <- subset(counts_like, counts_like$Freq > min)
pdf("Toxic Behavior Self Report Word Frequency Analysis", onefile = TRUE, title = "graphic")
counts_toxicword_graph <-ggplot(counts_toxicword, aes( x = reorder(toxicword, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("Frequency of Toxic Words") +
geom_text(aes(label = Freq), color = "grey") +
coord_flip()
counts_howtohelpyourself_graph <-ggplot(counts_howtohelpyourself, aes(x = reorder(howtohelpyourself, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("What helps you in the situation?") +
geom_text(aes(label = Freq), color = "grey") +
coord_flip()
counts_howtoimprove_graph <-ggplot(counts_howtoimprove, aes(x = reorder(howtoimprove, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("How to improve?") +
geom_text(aes(label = Freq), color = "grey") +
coord_flip()
counts_like_graph <-ggplot(counts_like, aes(x = reorder(like, +Freq), y = Freq)) +geom_bar(stat = "identity", fill = "steelblue") + theme_minimal()+
xlab("Words") + ylab("Frequency") +
ggtitle("Why you like the game?") +
geom_text(aes(label = Freq), color = "grey") +
coord_flip()
grid.arrange(counts_toxicword_graph)
grid.arrange(counts_howtohelpyourself_graph)
grid.arrange(counts_howtoimprove_graph)
grid.arrange(counts_like_graph)
dev.off()
